const colormapJet = [
  [0, 0, 131, 255],
  [0, 2, 132, 255],
  [0, 4, 133, 255],
  [0, 6, 135, 255],
  [0, 8, 136, 255],
  [0, 9, 137, 255],
  [0, 11, 138, 255],
  [0, 13, 140, 255],
  [0, 15, 141, 255],
  [0, 17, 142, 255],
  [0, 19, 143, 255],
  [0, 21, 144, 255],
  [0, 23, 146, 255],
  [0, 24, 147, 255],
  [0, 26, 148, 255],
  [0, 28, 149, 255],
  [0, 30, 151, 255],
  [0, 32, 152, 255],
  [0, 34, 153, 255],
  [0, 36, 154, 255],
  [0, 38, 155, 255],
  [0, 39, 157, 255],
  [0, 41, 158, 255],
  [0, 43, 159, 255],
  [0, 45, 160, 255],
  [0, 47, 161, 255],
  [0, 49, 163, 255],
  [0, 51, 164, 255],
  [0, 53, 165, 255],
  [0, 54, 166, 255],
  [0, 56, 168, 255],
  [0, 58, 169, 255],
  [0, 60, 170, 255],
  [0, 63, 171, 255],
  [0, 66, 173, 255],
  [0, 69, 174, 255],
  [0, 72, 175, 255],
  [0, 75, 177, 255],
  [0, 78, 178, 255],
  [1, 81, 179, 255],
  [1, 84, 181, 255],
  [1, 87, 182, 255],
  [1, 90, 183, 255],
  [1, 94, 185, 255],
  [1, 97, 186, 255],
  [1, 100, 187, 255],
  [1, 103, 189, 255],
  [1, 106, 190, 255],
  [1, 109, 191, 255],
  [1, 112, 193, 255],
  [1, 115, 194, 255],
  [1, 118, 195, 255],
  [2, 121, 197, 255],
  [2, 124, 198, 255],
  [2, 127, 199, 255],
  [2, 130, 201, 255],
  [2, 133, 202, 255],
  [2, 136, 203, 255],
  [2, 139, 205, 255],
  [2, 142, 206, 255],
  [2, 145, 207, 255],
  [2, 148, 209, 255],
  [2, 151, 210, 255],
  [2, 154, 211, 255],
  [3, 158, 213, 255],
  [3, 161, 214, 255],
  [3, 164, 215, 255],
  [3, 167, 216, 255],
  [3, 170, 218, 255],
  [3, 173, 219, 255],
  [3, 176, 220, 255],
  [3, 179, 222, 255],
  [3, 182, 223, 255],
  [3, 185, 224, 255],
  [3, 188, 226, 255],
  [3, 191, 227, 255],
  [3, 194, 228, 255],
  [4, 197, 230, 255],
  [4, 200, 231, 255],
  [4, 203, 232, 255],
  [4, 206, 234, 255],
  [4, 209, 235, 255],
  [4, 212, 236, 255],
  [4, 215, 238, 255],
  [4, 218, 239, 255],
  [4, 221, 240, 255],
  [4, 225, 242, 255],
  [4, 228, 243, 255],
  [4, 231, 244, 255],
  [4, 234, 246, 255],
  [5, 237, 247, 255],
  [5, 240, 248, 255],
  [5, 243, 250, 255],
  [5, 246, 251, 255],
  [5, 249, 252, 255],
  [5, 252, 254, 255],
  [5, 255, 255, 255],
  [9, 255, 251, 255],
  [13, 255, 247, 255],
  [17, 255, 243, 255],
  [21, 255, 239, 255],
  [25, 255, 235, 255],
  [29, 255, 231, 255],
  [33, 255, 227, 255],
  [37, 255, 223, 255],
  [41, 255, 219, 255],
  [45, 255, 215, 255],
  [49, 255, 210, 255],
  [53, 255, 206, 255],
  [57, 255, 202, 255],
  [61, 255, 198, 255],
  [65, 255, 194, 255],
  [68, 255, 190, 255],
  [72, 255, 186, 255],
  [76, 255, 182, 255],
  [80, 255, 178, 255],
  [84, 255, 174, 255],
  [88, 255, 170, 255],
  [92, 255, 166, 255],
  [96, 255, 162, 255],
  [100, 255, 158, 255],
  [104, 255, 154, 255],
  [108, 255, 150, 255],
  [112, 255, 146, 255],
  [116, 255, 142, 255],
  [120, 255, 138, 255],
  [124, 255, 134, 255],
  [128, 255, 130, 255],
  [132, 255, 125, 255],
  [136, 255, 121, 255],
  [140, 255, 117, 255],
  [144, 255, 113, 255],
  [148, 255, 109, 255],
  [152, 255, 105, 255],
  [156, 255, 101, 255],
  [160, 255, 97, 255],
  [164, 255, 93, 255],
  [168, 255, 89, 255],
  [172, 255, 85, 255],
  [176, 255, 81, 255],
  [180, 255, 77, 255],
  [184, 255, 73, 255],
  [188, 255, 69, 255],
  [192, 255, 65, 255],
  [195, 255, 61, 255],
  [199, 255, 57, 255],
  [203, 255, 53, 255],
  [207, 255, 49, 255],
  [211, 255, 45, 255],
  [215, 255, 40, 255],
  [219, 255, 36, 255],
  [223, 255, 32, 255],
  [227, 255, 28, 255],
  [231, 255, 24, 255],
  [235, 255, 20, 255],
  [239, 255, 16, 255],
  [243, 255, 12, 255],
  [247, 255, 8, 255],
  [251, 255, 4, 255],
  [255, 255, 0, 255],
  [255, 251, 0, 255],
  [255, 247, 0, 255],
  [255, 243, 0, 255],
  [255, 239, 0, 255],
  [255, 235, 0, 255],
  [255, 231, 0, 255],
  [254, 227, 0, 255],
  [254, 223, 0, 255],
  [254, 219, 0, 255],
  [254, 215, 0, 255],
  [254, 211, 0, 255],
  [254, 207, 0, 255],
  [254, 203, 0, 255],
  [254, 199, 0, 255],
  [254, 195, 0, 255],
  [254, 191, 0, 255],
  [254, 187, 0, 255],
  [254, 183, 0, 255],
  [254, 179, 0, 255],
  [253, 175, 0, 255],
  [253, 171, 0, 255],
  [253, 167, 0, 255],
  [253, 163, 0, 255],
  [253, 159, 0, 255],
  [253, 155, 0, 255],
  [253, 151, 0, 255],
  [253, 147, 0, 255],
  [253, 143, 0, 255],
  [253, 139, 0, 255],
  [253, 135, 0, 255],
  [253, 131, 0, 255],
  [253, 128, 0, 255],
  [252, 124, 0, 255],
  [252, 120, 0, 255],
  [252, 116, 0, 255],
  [252, 112, 0, 255],
  [252, 108, 0, 255],
  [252, 104, 0, 255],
  [252, 100, 0, 255],
  [252, 96, 0, 255],
  [252, 92, 0, 255],
  [252, 88, 0, 255],
  [252, 84, 0, 255],
  [252, 80, 0, 255],
  [251, 76, 0, 255],
  [251, 72, 0, 255],
  [251, 68, 0, 255],
  [251, 64, 0, 255],
  [251, 60, 0, 255],
  [251, 56, 0, 255],
  [251, 52, 0, 255],
  [251, 48, 0, 255],
  [251, 44, 0, 255],
  [251, 40, 0, 255],
  [251, 36, 0, 255],
  [251, 32, 0, 255],
  [251, 28, 0, 255],
  [250, 24, 0, 255],
  [250, 20, 0, 255],
  [250, 16, 0, 255],
  [250, 12, 0, 255],
  [250, 8, 0, 255],
  [250, 4, 0, 255],
  [250, 0, 0, 255],
  [246, 0, 0, 255],
  [242, 0, 0, 255],
  [239, 0, 0, 255],
  [235, 0, 0, 255],
  [231, 0, 0, 255],
  [227, 0, 0, 255],
  [223, 0, 0, 255],
  [220, 0, 0, 255],
  [216, 0, 0, 255],
  [212, 0, 0, 255],
  [208, 0, 0, 255],
  [204, 0, 0, 255],
  [200, 0, 0, 255],
  [197, 0, 0, 255],
  [193, 0, 0, 255],
  [189, 0, 0, 255],
  [185, 0, 0, 255],
  [181, 0, 0, 255],
  [178, 0, 0, 255],
  [174, 0, 0, 255],
  [170, 0, 0, 255],
  [166, 0, 0, 255],
  [162, 0, 0, 255],
  [159, 0, 0, 255],
  [155, 0, 0, 255],
  [151, 0, 0, 255],
  [147, 0, 0, 255],
  [143, 0, 0, 255],
  [139, 0, 0, 255],
  [136, 0, 0, 255],
  [132, 0, 0, 255],
  [128, 0, 0, 255]
]

export default class SimpleHeatmap {
  container: any
  canvas!: HTMLCanvasElement
  ctx!: CanvasRenderingContext2D | null

  // create(params: any) {
  //     return new SimpleHeatmap(params)
  // }

  constructor(params: any) {
    this.container = document.querySelector(params.container)
    this.createCanvas(params.width, params.height)
  }

  createCanvas(width: number, height: number) {
    this.canvas = document.createElement('canvas')
    this.canvas.width = width || 400
    this.canvas.height = height || 400
    this.container.appendChild(this.canvas)
    this.ctx = this.canvas.getContext('2d')
  }

  setData(data: number[][]) {
    // if (!this.ctx) {
    //   return
    // }
    const width = data.length
    const height = data[0].length

    const imageData = new ImageData(width, height)
    for (let i = 0; i < data.length; i++) {
      for (let j = 0; j < data[i].length; j++) {
        const index = (i + j * data.length) * 4
        const color = colormapJet[data[i][j]]
        imageData.data[index] = Math.round(color[0])
        imageData.data[index + 1] = Math.round(color[1])
        imageData.data[index + 2] = Math.round(color[2])
        imageData.data[index + 3] = 255
      }
    }
    createImageBitmap(imageData).then((imageBitmap) => {
      const dw = this.canvas.width
      const dh = this.canvas.height
      this.ctx?.drawImage(imageBitmap, 0, 0, dw, dh)
    })
  }
}
